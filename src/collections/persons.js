// Generated by CoffeeScript 1.10.0
var Backbone, Person, Persons, _, dropdownOptions,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Backbone = require('backbone');

_ = require("underscore");

Person = require('../models/person');

dropdownOptions = require("../views/codex/edit/form/dropdown/options");

Persons = (function(superClass) {
  extend(Persons, superClass);

  function Persons() {
    return Persons.__super__.constructor.apply(this, arguments);
  }

  Persons.prototype.model = Person;

  Persons.prototype.initialize = function() {
    _.extend(this, dropdownOptions);
    return this.dropdownOptionsInitialize();
  };

  Persons.prototype.comparator = function(person) {
    return person.get('name');
  };

  return Persons;

})(Backbone.Collection);

module.exports = new Persons();
