// Generated by CoffeeScript 1.10.0
var Backbone, Base,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Backbone = require('backbone');

Base = (function(superClass) {
  extend(Base, superClass);

  function Base() {
    return Base.__super__.constructor.apply(this, arguments);
  }

  Base.prototype.removeById = function(id) {
    var model;
    model = this.get(id);
    return this.remove(model);
  };

  return Base;

})(Backbone.Collection);

module.exports = Base;
