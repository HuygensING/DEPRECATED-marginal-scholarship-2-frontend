// Generated by CoffeeScript 1.10.0
var BaseModel, Person, config,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

BaseModel = require('./base');

config = require("./config");

Person = (function(superClass) {
  extend(Person, superClass);

  function Person() {
    return Person.__super__.constructor.apply(this, arguments);
  }

  Person.prototype.idAttribute = "pid";

  Person.prototype.url = function() {
    return (config.get("fullPersonUrl")) + "/" + this.id;
  };

  Person.prototype.defaults = function() {
    return {
      name: "",
      activityDate: "",
      birthDate: "",
      deathDate: ""
    };
  };

  Person.prototype.parse = function(attrs, options) {
    if (options.collection) {
      return {
        pid: attrs.id.replace("/persons/", ""),
        title: attrs.label
      };
    }
    return attrs;
  };

  return Person;

})(BaseModel);

module.exports = Person;
